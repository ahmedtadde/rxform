{"version":3,"file":"rxform.js","sources":["../src/typings/index.ts","../src/utils/errors.ts","../src/utils/logic.ts","../node_modules/lodash.clonedeep/index.js","../src/utils/object.ts","../src/utils/dom.ts","../src/model/validation.ts","../src/emitter/dom-events.ts","../src/utils/combinators.ts","../src/providers/error.ts","../src/emitter/error-providers.ts","../src/state/errors.ts","../src/emitter/errors-state.ts","../src/utils/logger.ts","../src/emitter/onsubmit.ts","../src/state/status.ts","../src/emitter/status-state.ts","../src/providers/value.ts","../src/emitter/value-providers.ts","../src/emitter/value-providers-router.ts","../src/state/values.ts","../src/emitter/values-state.ts","../src/index.ts","../src/emitter/builder.ts"],"sourcesContent":["export enum DOMEvents {\n  FOCUS = \"focus\",\n  INPUT = \"input\",\n  CHANGE = \"change\",\n  BLUR = \"blur\",\n  SUBMIT = \"submit\",\n  RESET = \"reset\"\n}\n\nexport type DOMFieldElementsType =\n  | HTMLInputElement\n  | HTMLSelectElement\n  | HTMLTextAreaElement;\n\nexport type DOMEventsType =\n  | DOMEvents.FOCUS\n  | DOMEvents.INPUT\n  | DOMEvents.BLUR\n  | DOMEvents.CHANGE\n  | DOMEvents.SUBMIT\n  | DOMEvents.RESET;\n\nexport type DOMFieldEventsType =\n  | DOMEvents.INPUT\n  | DOMEvents.CHANGE\n  | DOMEvents.BLUR;\n\nexport interface EmitterDOMEventConfig {\n  type: DOMEventsType;\n  registerAs: string;\n  options?: EventListenerOptions | boolean;\n}\n\nexport type EventEmitterListener = (...args: any[]) => any;\n\nexport interface FormStatusData {\n  fields: { [fieldName: string]: any };\n  submitting: boolean;\n}\n","export const throwError = (input: any): void => {\n  if (input instanceof Error) {\n    throw input;\n  } else {\n    throw new Error(JSON.stringify(input));\n  }\n};\n\nexport const errorMessage = (error: any) => {\n  return error instanceof Error ? error.message : new Error(error).message;\n};\n","export const toBool = (x: any) => Boolean(x);\nexport const not = (x: any): boolean => !toBool(x);\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","import { throwError } from '@utils/errors';\nimport { not, toBool } from '@utils/logic';\nimport cloneDeep from 'lodash.clonedeep';\n\nexport const isBoolean = (x: any): boolean => typeof x === 'boolean';\nexport const isUndefined = (x: any): boolean =>\n  x === undefined && typeof x === 'undefined';\nexport const isNull = (x: any): boolean => x === null && typeof x === 'object';\nexport const isNil = (x: any): boolean => isNull(x) || isUndefined(x);\nexport const isString = (x: any) =>\n  typeof x === 'string' || x instanceof String;\n\nexport const trim = (str: string, direction?: string) => {\n  if (not(isString(str))) {\n    throwError('Invalid argument value; value must be a string');\n  }\n\n  const directionIsValid = ['left', 'right', 'both'].includes(\n    direction as string\n  );\n\n  if (directionIsValid) {\n    switch (direction) {\n      case 'left':\n        return str.trimLeft();\n      case 'right':\n        return str.trimRight();\n      case 'both':\n        return str.trim();\n      default:\n        return str.trim();\n    }\n  }\n\n  return str.trim();\n};\n\nexport const emptyString = (x: any): boolean => {\n  return isString(x) && not(trim(x));\n};\n\nexport const nonEmptyString = (x: any): boolean => {\n  return isString(x) && Boolean(trim(x));\n};\n\nexport const isNumber = (x: any): boolean =>\n  typeof x === 'number' && not(isNaN(x));\n\nexport const isObject = (obj: any) => {\n  return obj !== null && not(Array.isArray(obj)) && typeof obj === 'object';\n};\n\nexport const isPlainObject = (obj: any) => {\n  return isObject(obj) && obj.constructor.name === 'Object';\n};\n\nexport const nonEmptyArray = (obj: any) =>\n  Array.isArray(obj) && toBool(obj.length);\n\nexport const isFunction = (obj: any): boolean =>\n  typeof obj === 'function' && obj instanceof Function;\n\nexport const isPromise = (obj: any): boolean =>\n  isObject(obj) && isFunction(obj.then) && obj instanceof Promise;\n\nexport const isFunctionOrPromise = (x: any): boolean =>\n  isFunction(x) || isPromise(x);\n\nexport const promisifyFunction = (fn: any, ...args: any[]) => {\n  if (not(isFunction(fn))) {\n    throwError(\n      `function argument (fn) is invalid; received value of type ${ typeof fn }`\n    );\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      const inputs = args.map((arg: any) => {\n        const shouldClone =\n          nonPrimitiveType(arg) &&\n          not(arg instanceof Element) &&\n          not(arg instanceof Event);\n        return shouldClone ? deepClone(arg) : arg;\n      });\n      resolve(fn(...inputs));\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const nonEmptyPlainObject = (obj: any) =>\n  isPlainObject(obj) && toBool(Object.keys(obj).length);\n\nexport const nonFrozenObject = (obj: any) => not(Object.isFrozen(obj));\n\nexport const nonPrimitiveType = (obj: any) =>\n  not(isNil(obj)) && (Array.isArray(obj) || isObject(obj) || isFunction(obj));\n\nexport const getValueFromObject = (obj: any, path: string): any => {\n  const decomposePath = (selectorPath: string) => {\n    nonEmptyString(selectorPath) ||\n      throwError(\n        `Invalid obj path expression: ${ JSON.stringify(selectorPath) }`\n      );\n    return selectorPath.split('.');\n  };\n\n  const standardizeObjKey = (step: string) => {\n    const regex = new RegExp('[[0-9]+]');\n    if (step !== '[]' && regex.test(step)) {\n      return Number(step.replace(/\\[/g, '').replace(/\\]/g, ''));\n    }\n    return step;\n  };\n\n  const decomposedPath = decomposePath(path);\n\n  const getValue = (fromObj: any, key: string) => {\n    const standardizedKey: string | number = standardizeObjKey(key);\n    if (isNumber(standardizedKey)) {\n      Array.isArray(fromObj) ||\n        throwError('Invalid obj; expected an array to extract value by index');\n      return fromObj[standardizedKey];\n    } else if (nonEmptyString(standardizedKey)) {\n      isPlainObject(fromObj) ||\n        throwError(\n          'Invalid obj; expected a plain object to extract value using accessor key'\n        );\n\n      return fromObj[standardizedKey];\n    }\n    throwError('Invalid key to extract value from obj');\n  };\n\n  if (decomposedPath.length === 1) {\n    try {\n      return getValue(obj, decomposedPath[0]);\n    } catch (error) {\n      throwError(error);\n    }\n  } else if (decomposedPath.length > 1) {\n    try {\n      return getValueFromObject(\n        getValue(obj, decomposedPath[0]),\n        decomposedPath.slice(1).join('.')\n      );\n    } catch (error) {\n      throwError(error);\n    }\n  }\n\n  return obj;\n};\n\nexport function deepFreeze(obj: any): Readonly<any> {\n  Object.freeze(obj);\n  Object.getOwnPropertyNames(obj).forEach((prop: string) => {\n    if (\n      obj.hasOwnProperty(prop) &&\n      obj[prop] !== null &&\n      (typeof obj[prop] === 'object' || typeof obj[prop] === 'function') &&\n      !Object.isFrozen(obj[prop])\n    ) {\n      deepFreeze(obj[prop]);\n    }\n  });\n\n  return obj as Readonly<any>;\n}\nexport function deepClone(obj: any): Readonly<any> {\n  return deepFreeze(cloneDeep(obj));\n}\n","import {\n  DOMEvents,\n  DOMFieldElementsType,\n  EmitterDOMEventConfig,\n  EventEmitterListener\n} from '@lib-types';\nimport { throwError } from '@utils/errors';\nimport { not } from '@utils/logic';\nimport { isNil, isNumber, nonEmptyString } from '@utils/object';\nimport { Emitter } from 'mitt';\n\nexport function isInputElement(value: any) {\n  return value instanceof HTMLInputElement;\n}\n\nexport function isSelectElement(value: any) {\n  return value instanceof HTMLSelectElement;\n}\n\nexport function isTextAreaElement(value: any) {\n  return value instanceof HTMLTextAreaElement;\n}\n\nexport function isInputElementOfType(type: string, value: any) {\n  return isInputElement(value) && value.type === type;\n}\n\nexport function isFormElement(value: any) {\n  return value instanceof HTMLFormElement;\n}\n\nexport function isFormFieldElement(value: any) {\n  return (\n    isInputElement(value) || isSelectElement(value) || isTextAreaElement(value)\n  );\n}\n\nexport function domSelector(selector: string, from?: Element): Element | void {\n  const queryString = nonEmptyString(selector) ? selector : '';\n  const provider = ($sourceEl: Element | Document) => {\n    const $matchedElement = $sourceEl.querySelector(queryString);\n    return $matchedElement instanceof Element\n      ? $matchedElement\n      : throwError('Invalid query selector');\n  };\n\n  return from instanceof Element ? provider(from) : provider(document);\n}\n\nexport function domSelectorAll(\n  selector: string,\n  from?: Element\n): Element[] | void {\n  const queryString = nonEmptyString(selector) ? selector : '';\n  const provider = ($sourceEl: Element | Document) => {\n    const $matchedElements = Array.from(\n      $sourceEl.querySelectorAll(queryString)\n    );\n    return $matchedElements.length\n      ? $matchedElements\n      : throwError('Invalid query selector');\n  };\n\n  return from instanceof Element ? provider(from) : provider(document);\n}\n\nexport const getFormElement = (\n  target: string | HTMLFormElement | Element\n): HTMLFormElement | void => {\n  const assertFormElement = (value: any): void => {\n    if (not(isFormElement(value))) {\n      throwError('Invalid form target value');\n    }\n  };\n\n  if (target instanceof HTMLFormElement) {\n    return target;\n  } else if (target instanceof Element) {\n    assertFormElement(target);\n    return target as HTMLFormElement;\n  } else if (nonEmptyString(target)) {\n    const $el = domSelector(target);\n    assertFormElement($el);\n    return $el as HTMLFormElement;\n  }\n};\n\nexport function addDOMListener(\n  target: Element | string,\n  event: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: EventListenerOptions | boolean\n): EventEmitterListener {\n  const $el = target instanceof Element ? target : domSelector(target);\n  if (not($el instanceof Element)) {\n    throwError('Invalid target param... resolved to non DOM element');\n  }\n\n  ($el as Element).addEventListener(event, listener, options || {});\n  return (_: any): void =>\n    ($el as Element).removeEventListener(event, listener, options || {});\n}\n\nexport function emitterDomEvents(\n  emitter$: Emitter,\n  element: Element,\n  domEvents: EmitterDOMEventConfig[]\n): Emitter {\n  domEvents.forEach((domEvent: EmitterDOMEventConfig): void => {\n    const { type, registerAs, options = {} } = domEvent;\n    const listener: EventListenerOrEventListenerObject = (e: Event) => {\n      if (e.type === DOMEvents.SUBMIT) {\n        e.preventDefault();\n      }\n      emitter$.emit(registerAs, e);\n    };\n    const cleanup = addDOMListener(element, type, listener, options);\n    emitter$.on('form@remove-dom-listeners', cleanup);\n  });\n\n  return emitter$;\n}\n\nexport function getFormFieldElementValue($el: DOMFieldElementsType) {\n  if (isNil($el) || not(isFormFieldElement($el))) {\n    throwError('Invalid form field element param');\n  }\n\n  if ($el instanceof HTMLInputElement) {\n    return getInputFieldElementValue($el);\n  }\n\n  if ($el instanceof HTMLSelectElement) {\n    return getSelectFieldElementValue($el);\n  }\n\n  if ($el instanceof HTMLTextAreaElement) {\n    return getTextAreaFieldElementValue($el);\n  }\n}\n\nexport function getInputFieldElementValue($el: HTMLInputElement) {\n  if (not($el instanceof HTMLInputElement)) {\n    throwError('Invalid form field element param');\n  }\n  const parser = ($field: HTMLInputElement) => {\n    switch ($field.type) {\n      case 'image':\n      case 'file':\n      case 'button':\n      case 'reset':\n      case 'submit':\n        return null;\n      case 'number':\n        return Number($field.value);\n      case 'checkbox':\n        return $field.checked ? $field.value : null;\n      case 'radio':\n        return $field.checked ? $field.value : null;\n      default:\n        return $field.value;\n    }\n  };\n  return parser($el);\n}\n\nexport function getSelectFieldElementValue($el: HTMLSelectElement) {\n  if (not($el instanceof HTMLSelectElement)) {\n    throwError('Invalid form field element param');\n  }\n  const parser = ($field: HTMLSelectElement) => {\n    const singleValue = ($target: HTMLSelectElement) => {\n      return (\n        (Array.isArray($target.options) &&\n          isNumber($target.selectedIndex) &&\n          $target.options[$target.selectedIndex] &&\n          not(isNil($target.options[$target.selectedIndex].value)) &&\n          $target.options[$target.selectedIndex].value) ||\n        null\n      );\n    };\n\n    const multipleValues = ($target: HTMLSelectElement) => {\n      const options = Array.isArray($target.options) ? $target.options : [];\n      return Array.from(options)\n        .filter((option: HTMLOptionElement) => option.selected)\n        .map((option: HTMLOptionElement) => {\n          if (isNil(option.value) && isNil(option.text)) {\n            return null;\n          }\n          return isNil(option.value) ? option.text : option.value;\n        });\n    };\n\n    return $field.multiple ? multipleValues($field) : singleValue($field);\n  };\n  return parser($el);\n}\n\nexport function getTextAreaFieldElementValue($el: HTMLTextAreaElement) {\n  if (not($el instanceof HTMLTextAreaElement)) {\n    throwError('Invalid form field element param');\n  }\n  return $el.value;\n}\n","import { getFormElement } from '@utils/dom';\nimport { not, toBool } from '@utils/logic';\nimport {\n  isBoolean,\n  isFunction,\n  isPlainObject,\n  nonEmptyArray,\n  nonEmptyPlainObject,\n  nonEmptyString,\n  trim\n} from '@utils/object';\n\nexport default function formOptionsValidator(model: any) {\n  const validators = [\n    { prop: 'target', fn: checkDOMTarget },\n    { prop: 'values', fn: checkValues },\n    { prop: 'errors', fn: checkErrors },\n    { prop: 'onsubmit', fn: checkFormSubmissionHandler }\n  ];\n\n  return validators.reduce(\n    (validationResult, validator) => {\n      const validation = validator.fn(model);\n\n      if (nonEmptyArray(validation.errors)) {\n        return Object.assign({}, validationResult, {\n          errors: (validationResult.errors as string[]).concat(\n            validation.errors as string[]\n          )\n        });\n      }\n\n      const setModelProp = (prop: string) =>\n        prop === 'errorsConfig' ? 'errors' : prop;\n\n      return Object.assign({}, validationResult, {\n        model: {\n          ...model,\n          [setModelProp(validator.prop)]:\n            // @ts-ignore\n            validation[validator.prop]\n        }\n      });\n    },\n    { model: {}, errors: [] }\n  );\n}\n\nfunction checkDOMTarget(model: any) {\n  const { target = '' } = isPlainObject(model) ? model : {};\n  if (not(nonEmptyString(target))) {\n    return {\n      errors: ['Invalid target DOM selector. Expected a non empty string'],\n      target: null\n    };\n  }\n\n  try {\n    getFormElement(target);\n    return { errors: null, target: trim(target) };\n  } catch (error) {\n    return {\n      errors: ['Invalid target DOM selector. No form element matched.'],\n      target: null\n    };\n  }\n}\n\nfunction checkFormSubmissionHandler(model: any) {\n  const { onsubmit = null } = isPlainObject(model) ? model : {};\n\n  if (not(isFunction(onsubmit))) {\n    return {\n      errors: ['Invalid form submission handler. Expected a function'],\n      onsubmit: null\n    };\n  }\n\n  return {\n    errors: null,\n    onsubmit\n  };\n}\n\n// tslint:disable-next-line: max-func-body-length\nfunction checkValues(model: any) {\n  const { values = {} } = isPlainObject(model) ? model : {};\n\n  const initialStateValidation = checkInitialState(values);\n  const providersValidation = checkProviders(values);\n  const reducerValidation = checkReducer(values);\n\n  if (\n    nonEmptyArray(initialStateValidation.errors) ||\n    nonEmptyArray(providersValidation.errors) ||\n    nonEmptyArray(reducerValidation.errors)\n  ) {\n    return {\n      errors: ([] as string[])\n        .concat(\n          nonEmptyArray(initialStateValidation.errors)\n            ? (initialStateValidation.errors as string[])\n            : []\n        )\n        .concat(\n          nonEmptyArray(providersValidation.errors)\n            ? (providersValidation.errors as string[])\n            : []\n        )\n        .concat(\n          nonEmptyArray(reducerValidation.errors)\n            ? (reducerValidation.errors as string[])\n            : []\n        ),\n      values: null\n    };\n  }\n\n  return {\n    errors: null,\n    values: {\n      providers: providersValidation.providers,\n      reducer: reducerValidation.reducer,\n      state: initialStateValidation.state\n    }\n  };\n\n  function checkInitialState(input: any) {\n    const { state = {} } = isPlainObject(input) ? input : {};\n    if (not(nonEmptyPlainObject(state))) {\n      return {\n        errors: [\n          'In values config, initial state is invalid. Expected a non empty plain object'\n        ],\n        state: null\n      };\n    }\n\n    return {\n      errors: null,\n      state\n    };\n  }\n\n  function checkProviders(input: any) {\n    const { providers = [] } = isPlainObject(input) ? input : {};\n    if (not(nonEmptyArray(providers))) {\n      return {\n        errors: [\n          'In values config, providers is invalid. Expected a non empty array'\n        ],\n        providers: null\n      };\n    }\n\n    const validation = providers.reduce(\n      (\n        result: { errors: string[]; providers: any[] },\n        providerConfig: any,\n        idx: number\n      ) => {\n        const { errors, provider } = checkProvider(providerConfig);\n        if (errors || !provider) {\n          return Object.assign({}, result, {\n            errors: result.errors.concat(\n              errors\n                ? errors(idx + 1)\n                : `In values config, provider ${idx + 1} is invalid.`\n            )\n          });\n        }\n\n        return Object.assign({}, result, {\n          providers: result.providers.concat(provider)\n        });\n      },\n      { errors: [], providers: [] }\n    );\n\n    if (nonEmptyArray(validation.errors)) {\n      return {\n        errors: validation.errors,\n        providers: null\n      };\n    }\n\n    return {\n      errors: null,\n      providers: validation.providers\n    };\n  }\n\n  function checkProvider(input: any) {\n    const optionsType = (obj: any) => {\n      if (nonEmptyString(obj)) return 'is-string';\n      if (nonEmptyPlainObject(obj) && nonEmptyString(obj.selector)) {\n        return 'is-plain-object';\n      }\n      if (\n        Array.isArray(obj) &&\n        nonEmptyArray(\n          obj\n            .slice(0, 3)\n            .filter((item: any) => nonEmptyString(item) || isBoolean(item))\n        )\n      ) {\n        return 'is-array';\n      }\n    };\n\n    switch (optionsType(input)) {\n      case 'is-string': {\n        return { errors: null, provider: { selector: trim(input) } };\n      }\n\n      case 'is-plain-object': {\n        return {\n          errors: null,\n          provider: { ...input, selector: trim(input.selector) }\n        };\n      }\n\n      case 'is-array': {\n        if (input.length === 1 && nonEmptyString(input[0])) {\n          return { errors: null, provider: { selector: trim(input[0]) } };\n        } else if (input.length === 2 && nonEmptyString(input[0])) {\n          return {\n            errors: null,\n            provider: Object.assign(\n              { selector: input[0] },\n              nonEmptyString(input[1])\n                ? { dispatch: input[1] }\n                : { multiple: toBool(input[1]) }\n            )\n          };\n        } else if (\n          input.length === 3 &&\n          nonEmptyString(input[0]) &&\n          nonEmptyString(input[1])\n        ) {\n          return {\n            errors: null,\n            provider: {\n              dispatch: input[1],\n              multiple: toBool(input[2]),\n              selector: input[0]\n            }\n          };\n        } else {\n          return {\n            errors: (providerIdx: number) => [\n              `In values config, provider ${providerIdx} is invalid. Array config is malformed`\n            ],\n            provider: null\n          };\n        }\n      }\n\n      default: {\n        return {\n          errors: (providerIdx: number) => [\n            `In values config, provider ${providerIdx} is invalid. Provider can be declared using a string (selector), an array [selector, (dispatch | multiple)?, multiple?], or a plain object {selector, dispatch?, events?, transformer?}`\n          ],\n          provider: null\n        };\n      }\n    }\n  }\n\n  function checkReducer(input: any) {\n    const { reducer = null } = isPlainObject(input) ? input : {};\n\n    if (not(isFunction(reducer))) {\n      return {\n        errors: ['In values config, reducer is invalid. Expected a function'],\n        reducer: null\n      };\n    }\n\n    return {\n      errors: null,\n      reducer\n    };\n  }\n}\n\n// tslint:disable-next-line: max-func-body-length\nfunction checkErrors(model: any) {\n  const { errors: errorsConfig = {} } = isPlainObject(model) ? model : {};\n  const initialStateValidation = checkInitialState(errorsConfig);\n  const providersValidation = checkProviders(errorsConfig);\n  const reducerValidation = checkReducer(errorsConfig);\n\n  if (\n    nonEmptyArray(initialStateValidation.errors) ||\n    nonEmptyArray(providersValidation.errors) ||\n    nonEmptyArray(reducerValidation.errors)\n  ) {\n    return {\n      errors: ([] as string[])\n        .concat(\n          nonEmptyArray(initialStateValidation.errors)\n            ? (initialStateValidation.errors as string[])\n            : []\n        )\n        .concat(\n          nonEmptyArray(providersValidation.errors)\n            ? (providersValidation.errors as string[])\n            : []\n        )\n        .concat(\n          nonEmptyArray(reducerValidation.errors)\n            ? (reducerValidation.errors as string[])\n            : []\n        ),\n      values: null\n    };\n  }\n\n  return {\n    errors: null,\n    errorsConfig: {\n      providers: providersValidation.providers,\n      reducer: reducerValidation.reducer,\n      state: initialStateValidation.state\n    }\n  };\n\n  function checkInitialState(input: any) {\n    const { state = {} } = isPlainObject(input) ? input : {};\n    if (not(nonEmptyPlainObject(state))) {\n      return {\n        errors: [\n          'In errors config, initial state is invalid. Expected a non empty plain object or nothing at all'\n        ],\n        state: null\n      };\n    }\n\n    return {\n      errors: null,\n      state\n    };\n  }\n\n  function checkProviders(input: any) {\n    const { providers = [] } = isPlainObject(input) ? input : {};\n    if (not(nonEmptyArray(providers))) {\n      return {\n        errors: [\n          'In errors config, providers is invalid. Expected a non empty array'\n        ],\n        providers: null\n      };\n    }\n\n    const validation = providers.reduce(\n      (\n        result: { errors: string[]; providers: any[] },\n        providerConfig: any,\n        idx: number\n      ) => {\n        const { errors, provider } = checkProvider(providerConfig);\n        if (errors || !provider) {\n          return Object.assign({}, result, {\n            errors: result.errors.concat(\n              errors\n                ? errors(idx + 1)\n                : `In errors config, provider ${idx + 1} is invalid.`\n            )\n          });\n        }\n\n        return Object.assign({}, result, {\n          providers: result.providers.concat(provider)\n        });\n      },\n      { errors: [], providers: [] }\n    );\n\n    if (nonEmptyArray(validation.errors)) {\n      return {\n        errors: validation.errors,\n        providers: null\n      };\n    }\n\n    return {\n      errors: null,\n      providers: validation.providers\n    };\n  }\n\n  function checkProvider(input: any) {\n    const optionsType = (obj: any) => {\n      if (nonEmptyString(obj)) return 'is-string';\n      if (nonEmptyPlainObject(obj) && nonEmptyString(obj.dispatch)) {\n        return 'is-plain-object';\n      }\n\n      if (\n        Array.isArray(obj) &&\n        obj\n          .slice(0, 3)\n          .filter((item: any) => nonEmptyString(item) || isFunction(item))\n          .length === 3\n      ) {\n        return 'is-array';\n      }\n    };\n\n    switch (optionsType(input)) {\n      case 'is-string': {\n        return { errors: null, provider: { dispatch: trim(input) } };\n      }\n\n      case 'is-plain-object': {\n        return {\n          errors: null,\n          provider: { ...input, dispatch: trim(input.dispatch) }\n        };\n      }\n\n      case 'is-array': {\n        if (\n          nonEmptyString(input[0]) &&\n          isFunction(input[1]) &&\n          (isFunction(input[2]) || nonEmptyString(input[2]))\n        ) {\n          return {\n            errors: null,\n            provider: {\n              dispatch: input[0],\n              message: input[2],\n              validator: input[1]\n            }\n          };\n        } else {\n          return {\n            errors: (providerIdx: number) => [\n              `In errors config, provider ${providerIdx} is invalid. Array config is malformed`\n            ],\n            provider: null\n          };\n        }\n      }\n\n      default: {\n        return {\n          errors: (providerIdx: number) => [\n            `In errors config, provider ${providerIdx} is invalid. Provider can   be declared using a string (dispatch), an array [dispatch (string), validator (function), message (string | function)], or a plain  object {dispatch, input?, message?, predicate?, validator?}`\n          ],\n          provider: null\n        };\n      }\n    }\n  }\n\n  function checkReducer(input: any) {\n    const { reducer = null } = isPlainObject(input) ? input : {};\n\n    if (not(isFunction(reducer))) {\n      return {\n        errors: ['In errors config, reducer is invalid. Expected a function'],\n        reducer: null\n      };\n    }\n\n    return {\n      errors: null,\n      reducer\n    };\n  }\n}\n","import { DOMEvents, EmitterDOMEventConfig } from \"@lib-types\";\nimport { emitterDomEvents } from \"@utils/dom\";\nimport { Emitter } from \"mitt\";\nexport const register = (\n  $formEl: HTMLFormElement,\n  emitter$: Emitter,\n  _: any\n): Emitter => {\n  const events: EmitterDOMEventConfig[] = [\n    { type: DOMEvents.FOCUS, registerAs: \"form@focus\" },\n    { type: DOMEvents.INPUT, registerAs: \"form@input\" },\n    { type: DOMEvents.CHANGE, registerAs: \"form@change\" },\n    { type: DOMEvents.BLUR, registerAs: \"form@blur\", options: true },\n    { type: DOMEvents.SUBMIT, registerAs: \"form@submit\" },\n    { type: DOMEvents.RESET, registerAs: \"form@reset\" }\n  ];\n\n  return emitterDomEvents(emitter$, $formEl, events);\n};\n\nexport default register;\n","export const I = (a: any) => a;\nexport const K = (a: any) => (_: any) => a;\nexport const T = (a: any) => (b: any) => b(a);\n","import { FormStatusData } from '@lib-types';\nimport { I as Icombinator, K as Kcombinator } from '@utils/combinators';\nimport { throwError } from '@utils/errors';\nimport { not } from '@utils/logic';\nimport {\n  getValueFromObject,\n  isFunction,\n  isFunctionOrPromise,\n  isPlainObject,\n  nonEmptyArray,\n  nonEmptyString,\n  promisifyFunction\n} from '@utils/object';\nimport { Emitter } from 'mitt';\nexport default (\n  $formEl: HTMLFormElement,\n  emitter$: Emitter,\n  formErrorOptionObj: any\n) => {\n  const helpers = {\n    errorMessage: getErrorMessageFn(formErrorOptionObj),\n    formErrors: getErrorBagFn(emitter$),\n    formStatus: getStatusFn(emitter$),\n    hookListeners: getHookListeners(formErrorOptionObj),\n    noop: () => Symbol.for('form@error-provider[no-validation]'),\n    ok: () => Symbol.for('form@error-provider[no-errors]'),\n    validator: getValidatorFn(formErrorOptionObj),\n    validatorInput: getInputFn(formErrorOptionObj),\n    validatorPredicate: getPredicateFn(formErrorOptionObj)\n  };\n\n  const listener = (emitterInstance$: Emitter, optionsObj: any) => (\n    formValues: any\n  ) =>\n    handler(\n      formValues,\n      Object.assign({}, optionsObj, {\n        emitter$: emitterInstance$\n      })\n    );\n\n  emitter$.on(\n    'form@values',\n    listener(emitter$, Object.assign({}, $formEl, formErrorOptionObj, helpers))\n  );\n  return true;\n};\n\nfunction handler(formValues: any, ctx: any) {\n  isPlainObject(formValues) ||\n    throwError('Invalid form values state obj; expected plain object');\n  const formErrors = ctx.formErrors();\n  const formStatus = ctx.formStatus();\n  if (not(formStatus.submitting)) {\n    let validatorInput: any;\n    promisifyFunction(\n      ctx.hookListeners.start,\n      formValues,\n      formErrors,\n      formStatus\n    )\n      .then(() => {\n        return promisifyFunction(\n          ctx.validatorPredicate,\n          formValues,\n          formErrors,\n          formStatus\n        );\n      })\n      .then((predicateResult?: any) => {\n        return predicateResult\n          ? promisifyFunction(\n              ctx.validatorInput,\n              formValues,\n              formErrors,\n              formStatus\n            )\n          : Promise.resolve(ctx.noop());\n      })\n      .then((input: any) => {\n        validatorInput = input;\n        return validatorInput === ctx.noop()\n          ? Promise.resolve(ctx.noop())\n          : promisifyFunction(\n              ctx.validator,\n              validatorInput,\n              formValues,\n              formErrors,\n              formStatus\n            );\n      })\n      .then((validationResult?: any) => {\n        return validationResult === ctx.noop() ||\n          Boolean(validationResult) === true\n          ? Promise.resolve(ctx.ok())\n          : promisifyFunction(\n              ctx.errorMessage,\n              validatorInput,\n              formValues,\n              formErrors,\n              formStatus\n            );\n      })\n      .then((validationErrorMessage?: any) => {\n        nonEmptyString(ctx.dispatch) ||\n          throwError(\n            \"Invalid error provider 'dispatch' option value: expected a string\"\n          );\n        if (validationErrorMessage === ctx.ok()) {\n          const payload = {\n            error: null,\n            type: ctx.dispatch\n          };\n\n          ctx.emitter$.emit('form@error', payload);\n          return promisifyFunction(ctx.hookListeners.end, payload);\n        } else {\n          const payload = {\n            error: {\n              context: {\n                errors: formErrors,\n                input: validatorInput,\n                status: formStatus,\n                values: formValues\n              },\n              message: validationErrorMessage\n            },\n            type: ctx.dispatch\n          };\n          ctx.emitter$.emit('form@error', payload);\n          return promisifyFunction(ctx.hookListeners.end, {\n            error: payload.error.message,\n            input: validatorInput,\n            type: payload.type\n          });\n        }\n      })\n      .then(() => true)\n      .catch((error: Error) => {\n        throwError(error);\n      });\n  }\n}\n\nfunction getInputFn(options: any) {\n  const valueType = (obj: any) => {\n    if (isFunction(obj)) return 'is-function';\n    if (nonEmptyString(obj)) return 'is-string';\n    if (\n      Array.isArray(obj) &&\n      nonEmptyArray(obj.filter((item: any) => nonEmptyString(item)))\n    ) {\n      return 'is-array-of-string';\n    }\n  };\n\n  switch (valueType(options.input)) {\n    case 'is-string': {\n      return (stateValues: any) =>\n        getValueFromObject(stateValues, options.input);\n    }\n    case 'is-array-of-string': {\n      return (stateValues: any) =>\n        options.input.map((pathSelector: string) =>\n          getValueFromObject(stateValues, pathSelector)\n        );\n    }\n    case 'is-function': {\n      return options.input;\n    }\n\n    default: {\n      return Icombinator;\n    }\n  }\n}\n\nfunction getPredicateFn(options: any) {\n  return isFunctionOrPromise(options.predicate)\n    ? options.predicate\n    : Kcombinator(true);\n}\n\nfunction getValidatorFn(options: any) {\n  return isFunctionOrPromise(options.validator)\n    ? options.validator\n    : Kcombinator(true);\n}\n\nfunction getErrorMessageFn(options: any) {\n  const valueType = (obj: any) => {\n    if (isFunctionOrPromise(obj)) return 'is-function-or-promise';\n    if (nonEmptyString(obj)) return 'is-string';\n  };\n\n  switch (valueType(options.message)) {\n    case 'is-string': {\n      return Kcombinator(options.message);\n    }\n\n    case 'is-function-or-promise': {\n      return options.message;\n    }\n\n    default: {\n      nonEmptyString(options.dispatch) ||\n        throwError(\n          \"Invalid error provider 'dispatch' option value: expected a string\"\n        );\n\n      return Kcombinator(`\"${options.dispatch}\" error(s)`);\n    }\n  }\n}\n\nfunction getErrorBagFn(formEmitterInstance$: Emitter) {\n  let errorBag = {};\n  formEmitterInstance$.on('form@errors', (payload: any) => {\n    errorBag = payload;\n  });\n\n  return () => errorBag;\n}\n\nfunction getStatusFn(formEmitterInstance$: Emitter) {\n  let status = {\n    fields: {},\n    submitting: false\n  };\n\n  formEmitterInstance$.on('form@status', (payload: FormStatusData) => {\n    status = payload;\n  });\n\n  return () => status;\n}\n\nfunction getHookListeners(options: any) {\n  const hooks = Object.assign(\n    {},\n    { start: Icombinator, end: Icombinator },\n    isPlainObject(options.hooks) || {}\n  );\n\n  return {\n    end: isFunctionOrPromise(hooks.end) ? hooks.end : Icombinator,\n    start: isFunctionOrPromise(hooks.start) ? hooks.start : Icombinator\n  };\n}\n","import errorProviderFn from '@src/providers/error';\nimport { Emitter } from 'mitt';\nexport default (\n  $formEl: HTMLFormElement,\n  emitter$: Emitter,\n  formOptions: any\n): Emitter => {\n  formOptions.errors.providers.forEach((formErrorOptionObj: any) => {\n    errorProviderFn($formEl, emitter$, formErrorOptionObj);\n  });\n\n  return emitter$;\n};\n","import { I as Icombinator } from '@utils/combinators';\nimport { throwError } from '@utils/errors';\nimport {\n  deepClone,\n  isFunctionOrPromise,\n  isPlainObject,\n  promisifyFunction\n} from '@utils/object';\nimport { Emitter } from 'mitt';\nexport default (emitter$: Emitter, formErrorsOptions: any) => {\n  const helpers = {\n    getStates: getStatesGenerator(formErrorsOptions),\n    hookListeners: getHookListeners(formErrorsOptions),\n    reducer: getReducer(formErrorsOptions)\n  };\n\n  const listener = (\n    emitterInstance$: Emitter,\n    optionsObj: any,\n    helperFnsObj: any\n  ) => (newValue: { type: string; value: any }) =>\n    handler(\n      newValue,\n      Object.assign({}, optionsObj, helperFnsObj, {\n        emitter$: emitterInstance$\n      })\n    );\n\n  emitter$.on('form@error', listener(emitter$, formErrorsOptions, helpers));\n  emitter$.on('form@reset', () => {\n    const states = helpers.getStates({});\n    emitter$.emit('form@errors', deepClone(states.current));\n  });\n\n  emitter$.on('set-errors', (payload: any) => {\n    isPlainObject(payload) || throwError(\"Invalid errors' state object\");\n    const states = helpers.getStates(payload);\n    emitter$.emit('form@errors', deepClone(states.current));\n  });\n\n  return listener;\n};\n\nfunction handler(newValue: { type: string; value: any }, ctx: any) {\n  const currentState = ctx.getStates().current;\n  promisifyFunction(ctx.hookListeners.before, {\n    currentState,\n    newValue\n  })\n    .then(() => {\n      return promisifyFunction(ctx.reducer, currentState, newValue);\n    })\n    .then((newComputedState: any) => {\n      isPlainObject(newComputedState) ||\n        throwError(\"Invalid errors' state data; expected plain object\");\n      const states = ctx.getStates(newComputedState);\n      ctx.emitter$.emit('form@errors', deepClone(states.current));\n      return promisifyFunction(ctx.hookListeners.after, {\n        currentState: states.current,\n        previousState: states.previous\n      });\n    })\n    .then(() => true)\n    .catch((error: Error) => {\n      throwError(error);\n    });\n}\n\nfunction getInitialState(options: any) {\n  return deepClone(isPlainObject(options.state) ? options.state : {});\n}\n\nfunction getReducer(options: any) {\n  return isFunctionOrPromise(options.reducer)\n    ? options.reducer\n    : throwError(\"Invalid errors' state reducer\");\n}\n\nfunction getHookListeners(options: any) {\n  const hooksDeclarationObj = Object.assign(\n    {},\n    { before: Icombinator, after: Icombinator },\n    options.hooks || {}\n  );\n  return Object.keys(hooksDeclarationObj).reduce(\n    (listeners: any, hook: string) => {\n      const listener = isFunctionOrPromise(hooksDeclarationObj[hook])\n        ? hooksDeclarationObj[hook]\n        : Icombinator;\n      return Object.assign({}, listeners, { [hook]: listener });\n    },\n    {}\n  );\n}\n\nfunction getStatesGenerator(options?: any) {\n  let states: {\n    current: Readonly<{ [key: string]: Readonly<any> }>;\n    previous: Readonly<{ [key: string]: Readonly<any> } | null>;\n  } = {\n    current: getInitialState(options),\n    previous: null\n  };\n\n  return (...args: any[]) => {\n    if (!args.length) {\n      return states;\n    }\n\n    if (isPlainObject(args[0])) {\n      states = {\n        current: deepClone(args[0]),\n        previous: states.current\n      };\n    }\n\n    return states;\n  };\n}\n","import stateStreamingFn from '@src/state/errors';\nimport { Emitter } from 'mitt';\nexport default (\n  _: HTMLFormElement,\n  emitter$: Emitter,\n  formOptions: any\n): Emitter => {\n  stateStreamingFn(emitter$, formOptions.errors);\n  return emitter$;\n};\n","const { info, warn: warning, error } = console;\nexport const log = {\n  error,\n  info,\n  warning\n};\n","import { FormStatusData } from '@lib-types';\nimport { throwError } from '@utils/errors';\nimport { log } from '@utils/logger';\nimport {\n  getValueFromObject,\n  isFunctionOrPromise,\n  isPlainObject,\n  promisifyFunction\n} from '@utils/object';\nimport { Emitter } from 'mitt';\nexport default (\n  _: HTMLFormElement,\n  emitter$: Emitter,\n  formOptions: any\n): Emitter => {\n  const update = (target: 'values' | 'errors' | 'status') => (payload: any) => {\n    isPlainObject(payload) || throwError(`Invalid ${target}' state object`);\n    emitter$.emit(`set-${target}`, payload);\n  };\n\n  const context = {\n    dispatch: {\n      errors: update('errors'),\n      status: update('status'),\n      values: update('values')\n    },\n    errors: getFormErrorsStateFn(emitter$),\n    handler: getFormSubmissionHandler(formOptions),\n    status: getFormStatusStateFn(emitter$),\n    values: getFormValuesStateFn(emitter$, formOptions)\n  };\n\n  const listener = (ctx: any) => (evt: Event) => handler(evt, ctx);\n  emitter$.on('form@submit', listener(context));\n  return emitter$;\n};\n\nfunction handler(_: any, ctx: any) {\n  promisifyFunction(\n    ctx.handler,\n    ctx.values(),\n    ctx.errors(),\n    ctx.status(),\n    ctx.dispatch\n  )\n    .then(() => true)\n    .catch((error: Error) => {\n      log.error('unexpected error occurred while running form submission');\n      throwError(error);\n    });\n}\n\nfunction getFormSubmissionHandler(options: any) {\n  isFunctionOrPromise(options.onsubmit) ||\n    throwError('Invalid form submission handler');\n  return options.onsubmit;\n}\n\nfunction getFormValuesStateFn(formEmitterInstance$: Emitter, options: any) {\n  let values = getInitialState(options);\n  formEmitterInstance$.on('form@values', (payload: any) => {\n    values = payload;\n  });\n  return () => values;\n}\n\nfunction getFormErrorsStateFn(formEmitterInstance$: Emitter) {\n  let errors = {};\n  formEmitterInstance$.on('form@errors', (payload: any) => {\n    errors = payload;\n  });\n\n  return () => errors;\n}\n\nfunction getFormStatusStateFn(formEmitterInstance$: Emitter) {\n  let status = { fields: {}, submitting: false };\n  formEmitterInstance$.on('form@status', (payload: FormStatusData) => {\n    status = payload;\n  });\n  return () => status;\n}\n\nfunction getInitialState(options: any) {\n  const state = getValueFromObject(options, 'values.state');\n  return isPlainObject(state)\n    ? state\n    : throwError(\"Invalid initial values' state\");\n}\n","import {\n  DOMEvents,\n  DOMEventsType,\n  DOMFieldElementsType,\n  FormStatusData\n} from '@lib-types';\nimport { throwError } from '@utils/errors';\nimport { not } from '@utils/logic';\nimport {\n  deepClone,\n  isBoolean,\n  isPlainObject,\n  nonEmptyString\n} from '@utils/object';\nimport { Emitter } from 'mitt';\nexport default (emitter$: Emitter) => {\n  let status: FormStatusData = {\n    fields: {},\n    submitting: false\n  };\n\n  const formDOMEvents = [\n    DOMEvents.BLUR,\n    DOMEvents.CHANGE,\n    DOMEvents.SUBMIT,\n    DOMEvents.RESET\n  ];\n\n  const handler = (formEmitter$: Emitter) => (evt: Event) => {\n    const isFormFieldElementStatusChange = not(\n      [DOMEvents.SUBMIT, DOMEvents.RESET].includes(evt.type as DOMEventsType) ||\n        (evt.target instanceof HTMLInputElement &&\n          ['submit', 'reset', 'file', 'button', 'image'].includes(\n            evt.target.type\n          )) ||\n        (evt.target instanceof HTMLButtonElement &&\n          ['submit', 'reset'].includes(evt.target.type))\n    );\n\n    if (isFormFieldElementStatusChange) {\n      const $el = evt.target as DOMFieldElementsType | HTMLFormElement;\n      nonEmptyString($el.name) ||\n        throwError(\n          `Target element has no name attribute: ${JSON.stringify($el)}`\n        );\n\n      const mapEventToFieldStatus = (fieldDOMEvent: Event) => {\n        switch (fieldDOMEvent.type) {\n          case 'blur':\n            return ['touched'];\n          case 'change':\n            return ['modified'];\n          case 'submit':\n            return ['touched', 'modified'];\n          default:\n            return [];\n        }\n      };\n\n      const fieldStatusObj = isPlainObject(status.fields[$el.name.trim()])\n        ? status.fields[$el.name.trim()]\n        : {};\n\n      status.fields[$el.name.trim()] = mapEventToFieldStatus(evt).reduce(\n        (\n          updatedFieldStatusObj: { [statusType: string]: boolean },\n          statusType: string\n        ) => {\n          return fieldStatusObj[statusType]\n            ? updatedFieldStatusObj\n            : Object.assign({}, updatedFieldStatusObj, { [statusType]: true });\n        },\n        fieldStatusObj\n      );\n    }\n\n    if (evt.type === 'submit') {\n      status.submitting = true;\n    } else if (evt.type === 'reset') {\n      status = {\n        fields: {},\n        submitting: false\n      };\n    }\n\n    formEmitter$.emit('form@status', deepClone(status));\n  };\n\n  formDOMEvents.forEach((formDOMEventType: DOMEventsType) =>\n    emitter$.on(`form@${formDOMEventType}`, handler(emitter$))\n  );\n\n  emitter$.on('set-status', (payload: any) => {\n    isPlainObject(payload) || throwError(\"Invalid status' state object\");\n    isPlainObject(payload.fields) ||\n      throwError(\n        \"Invalid status' state object; 'fields' prop is required and its value must be a plain object\"\n      );\n    isBoolean(payload.submitting) ||\n      throwError(\n        \"Invalid status' state object; 'submitting' prop is required and its value must be boolean\"\n      );\n    status = payload;\n    emitter$.emit('form@status', deepClone(status));\n  });\n\n  return emitter$;\n};\n","import stateStreamingFn from \"@src/state/status\";\nimport { Emitter } from \"mitt\";\nexport default (_: HTMLFormElement, emitter$: Emitter, __: any): Emitter => {\n  stateStreamingFn(emitter$);\n  return emitter$;\n};\n","import { DOMFieldElementsType, FormStatusData } from '@lib-types';\nimport { throwError } from '@src/utils/errors';\nimport { I as Icombinator, K as Kcombinator } from '@utils/combinators';\nimport {\n  domSelectorAll,\n  getFormFieldElementValue,\n  isFormFieldElement\n} from '@utils/dom';\nimport { not } from '@utils/logic';\nimport {\n  isBoolean,\n  isFunctionOrPromise,\n  isPlainObject,\n  nonEmptyArray,\n  nonEmptyString,\n  promisifyFunction\n} from '@utils/object';\n\nimport { Emitter } from 'mitt';\n\nexport default (\n  $formEl: HTMLFormElement,\n  emitter$: Emitter,\n  formValueOptions: any\n) => {\n  const standardizedFormValueOptions = standardizeFormValueOptions(\n    formValueOptions\n  );\n  const helpers = {\n    formStatus: getStatusFn(emitter$),\n    hookListeners: getHookListeners(standardizedFormValueOptions),\n    parseAsArray: isValuesArray(standardizedFormValueOptions),\n    parser: getParser(standardizedFormValueOptions),\n    transformer: getTransformer(standardizedFormValueOptions)\n  };\n\n  const listener = (\n    emitterInstance$: Emitter,\n    optionsObj: any,\n    helperFnsObj: any\n  ) => (evt: Event) =>\n    handler(\n      evt,\n      Object.assign({}, optionsObj, helperFnsObj, {\n        emitter$: emitterInstance$\n      })\n    );\n\n  emitter$.on(\n    `form@provider[selector=\"${standardizedFormValueOptions.selector}\"]`,\n    listener(\n      emitter$,\n      Object.assign({}, $formEl, standardizedFormValueOptions),\n      helpers\n    )\n  );\n\n  return listener;\n};\n\nfunction handler(evt: Event, ctx: any) {\n  const $targetElements = ctx.parseAsArray()\n    ? (domSelectorAll(ctx.selector) as Element[])\n    : [evt.target as Element];\n\n  if (\n    !$targetElements.length ||\n    !$targetElements.every(($e: Element) => isFormFieldElement($e))\n  ) {\n    throwError(`Invalid target element(s) for selector ${ctx.selector}`);\n  }\n\n  if (!ctx.parseAsArray() && $targetElements.length !== 1) {\n    throwError(\n      `Invalid selector ${ctx.selector}; must target single form field element`\n    );\n  }\n\n  const formStatus = ctx.formStatus();\n  if (not(formStatus.submitting)) {\n    promisifyFunction(ctx.hookListeners.start, evt)\n      .then(() => {\n        return parseValues(\n          ctx.parser,\n          $targetElements as DOMFieldElementsType[]\n        );\n      })\n      .then(extractedValues => {\n        return transformValues(ctx.transformer, extractedValues);\n      })\n      .then(transformedValues => {\n        const payload = {\n          type: ctx.dispatch || ctx.selector,\n          value: ctx.parseAsArray() ? transformedValues : transformedValues[0]\n        };\n        ctx.emitter$.emit('form@value', payload);\n        return promisifyFunction(ctx.hookListeners.end, payload);\n      })\n      .then(() => true)\n      .catch((error: Error) => {\n        throwError(error);\n      });\n  }\n}\n\nasync function parseValues(parserFn: any, $elements: DOMFieldElementsType[]) {\n  return Promise.all(\n    $elements.map($el => {\n      return promisifyFunction(parserFn, $el).then((extractedValue: any) => {\n        const name =\n          $el.name ||\n          throwError(\n            `Target element has no name attribute: ${JSON.stringify($el)}`\n          );\n        return { name, value: extractedValue };\n      });\n    })\n  );\n}\n\nasync function transformValues(transformerFn: any, extractedValues: any[]) {\n  return Promise.all(\n    extractedValues.map((extractedValue: any) => {\n      return promisifyFunction(transformerFn, extractedValue);\n    })\n  );\n}\n\nfunction getParser(options: any) {\n  return isFunctionOrPromise(options.parser)\n    ? options.parser\n    : getFormFieldElementValue;\n}\n\nfunction getTransformer(options: any) {\n  return isFunctionOrPromise(options.transformer)\n    ? options.transformer\n    : (extractedValue: { name: string; value: any }) => extractedValue.value;\n}\n\nfunction getHookListeners(options: any) {\n  const hooks = Object.assign(\n    {},\n    { start: Icombinator, end: Icombinator },\n    isPlainObject(options.hooks) || {}\n  );\n\n  return {\n    end: isFunctionOrPromise(hooks.end) ? hooks.end : Icombinator,\n    start: isFunctionOrPromise(hooks.start) ? hooks.start : Icombinator\n  };\n}\n\nfunction isValuesArray(options: any) {\n  return Kcombinator(options.multiple === true);\n}\n\nfunction standardizeFormValueOptions(options: any) {\n  const optionsType = (obj: any) => {\n    if (nonEmptyString(obj)) return 'is-string';\n    if (isPlainObject(obj)) return 'is-plain-object';\n    if (\n      Array.isArray(obj) &&\n      nonEmptyArray(\n        obj\n          .slice(0, 3)\n          .filter((item: any) => nonEmptyString(item) || isBoolean(item))\n      )\n    ) {\n      return 'is-array';\n    }\n  };\n\n  switch (optionsType(options)) {\n    case 'is-string': {\n      return { selector: options };\n    }\n\n    case 'is-plain-object': {\n      return options;\n    }\n\n    case 'is-array': {\n      if (options.length === 1) {\n        return { selector: options[0] };\n      } else if (options.length === 2) {\n        return Object.assign(\n          {},\n          { selector: options[0] },\n          nonEmptyString(options[1])\n            ? { dispatch: options[1] }\n            : { multiple: Boolean(options[1]) }\n        );\n      } else if (options.length === 3) {\n        return {\n          dispatch: options[1],\n          multiple: Boolean(options[2]),\n          selector: options[0]\n        };\n      } else {\n        throwError(`Invalid value provider option`);\n      }\n    }\n  }\n}\n\nfunction getStatusFn(formEmitterInstance$: Emitter) {\n  let status = {\n    fields: {},\n    submitting: false\n  };\n  formEmitterInstance$.on('form@status', (payload: FormStatusData) => {\n    status = payload;\n  });\n\n  return () => status;\n}\n","import valueProviderFn from '@src/providers/value';\nimport { Emitter } from 'mitt';\nexport default (\n  $formEl: HTMLFormElement,\n  emitter$: Emitter,\n  formOptions: any\n): Emitter => {\n  formOptions.values.providers.forEach((formValueOptionObj: any) => {\n    valueProviderFn($formEl, emitter$, formValueOptionObj);\n  });\n\n  return emitter$;\n};\n","import { DOMEvents, DOMEventsType } from \"@lib-types\";\nimport { throwError } from \"@utils/errors\";\nimport {\n  isBoolean,\n  isPlainObject,\n  nonEmptyArray,\n  nonEmptyString\n} from \"@utils/object\";\nimport { Emitter } from \"mitt\";\nexport const router = (\n  $formElement: HTMLFormElement,\n  emitter$: Emitter,\n  formOptions: any\n): Emitter => {\n  type SimplifiedProviderOptionsObj = { events: string[]; selector: string };\n  const formDOMEvents = [\n    DOMEvents.BLUR,\n    DOMEvents.CHANGE,\n    DOMEvents.FOCUS,\n    DOMEvents.INPUT,\n    DOMEvents.SUBMIT\n  ];\n  const providers: SimplifiedProviderOptionsObj[] = formOptions.values.providers\n    .map(standardizeValueProviderOptionsObj)\n    .map(\n      (providerOptionObj: any): SimplifiedProviderOptionsObj => {\n        return {\n          events: getProviderEventSources(providerOptionObj, formDOMEvents),\n          selector: nonEmptyString(providerOptionObj.selector)\n            ? providerOptionObj.selector\n            : throwError(\"Invalid value provider DOM selector value\")\n        };\n      }\n    );\n\n  const routeFormEventToProvider = (\n    emitterInstance$: Emitter,\n    simplifiedProvidersOptionObjs: SimplifiedProviderOptionsObj[]\n  ) => (evt: Event) => {\n    const matchedProviderIndex = simplifiedProvidersOptionObjs.findIndex(\n      (simplifiedProviderOptionObj: SimplifiedProviderOptionsObj) => {\n        return (\n          simplifiedProviderOptionObj.events.includes(evt.type) &&\n          evt.target instanceof Element &&\n          evt.target.matches(\n            `form${formOptions.target} ${simplifiedProviderOptionObj.selector}`\n          )\n        );\n      }\n    );\n\n    if (matchedProviderIndex !== -1) {\n      const matchedProvider =\n        simplifiedProvidersOptionObjs[matchedProviderIndex];\n      emitterInstance$.emit(\n        `form@provider[selector=\"${matchedProvider.selector}\"]`,\n        evt\n      );\n    }\n  };\n\n  formDOMEvents.forEach((formDOMEventType: DOMEventsType) =>\n    emitter$.on(\n      `form@${formDOMEventType}`,\n      routeFormEventToProvider(emitter$, providers)\n    )\n  );\n\n  emitter$.on(`form@${DOMEvents.RESET}`, () => $formElement.reset());\n  return emitter$;\n};\n\nfunction getProviderEventSources(\n  formOptions: any,\n  allowedEvents: Array<string | DOMEvents>\n) {\n  const extractEvents = (\n    optionsObj: any,\n    eventsFilter: Array<string | DOMEvents>\n  ) => {\n    const { events: providedEvents } = optionsObj;\n    if (providedEvents === false) return [\"submit\"];\n\n    const events =\n      Array.isArray(providedEvents) && providedEvents.length\n        ? providedEvents\n        : [];\n    return events.reduce((collectedEvents: string[], evt: string) => {\n      const shouldCollect = eventsFilter.includes(evt);\n      if (shouldCollect) {\n        return collectedEvents.concat(evt);\n      }\n\n      return collectedEvents;\n    }, []);\n  };\n\n  const resolver = (extractedEvents: Array<string | DOMEvents>) => {\n    if (Array.isArray(extractedEvents) && extractedEvents.length) {\n      return extractedEvents.concat(\"submit\");\n    } else if (Array.isArray(extractedEvents)) {\n      return [\"blur\", \"change\", \"submit\"];\n    }\n\n    throwError(\n      `Invalid events extracted from value provider option object: ${JSON.stringify(\n        extractedEvents\n      )}`\n    );\n\n    return [];\n  };\n\n  return resolver(extractEvents(formOptions, allowedEvents));\n}\n\nfunction standardizeValueProviderOptionsObj(options: any) {\n  const optionsType = (obj: any) => {\n    if (nonEmptyString(obj)) return \"is-string\";\n    if (isPlainObject(obj)) return \"is-plain-object\";\n    if (\n      Array.isArray(obj) &&\n      nonEmptyArray(\n        obj\n          .slice(0, 3)\n          .filter((item: any) => nonEmptyString(item) || isBoolean(item))\n      )\n    ) {\n      return \"is-array\";\n    }\n  };\n\n  switch (optionsType(options)) {\n    case \"is-string\": {\n      return { selector: options };\n    }\n\n    case \"is-plain-object\": {\n      return options;\n    }\n\n    case \"is-array\": {\n      if (options.length === 1) {\n        return { selector: options[0] };\n      } else if (options.length === 2) {\n        return Object.assign(\n          {},\n          { selector: options[0] },\n          nonEmptyString(options[1])\n            ? { dispatch: options[1] }\n            : { multiple: Boolean(options[1]) }\n        );\n      } else if (options.length === 3) {\n        return {\n          dispatch: options[1],\n          multiple: Boolean(options[2]),\n          selector: options[0]\n        };\n      } else {\n        throwError(`Invalid value provider option`);\n      }\n    }\n  }\n}\n\nexport default router;\n","import { I as Icombinator } from '@utils/combinators';\nimport { throwError } from '@utils/errors';\nimport { not } from '@utils/logic';\nimport {\n  deepClone,\n  isFunctionOrPromise,\n  isPlainObject,\n  promisifyFunction\n} from '@utils/object';\nimport { Emitter } from 'mitt';\nexport default (emitter$: Emitter, formValuesOptions: any) => {\n  const helpers = {\n    getStates: getStatesGenerator(formValuesOptions),\n    hookListeners: getHookListeners(formValuesOptions),\n    reducer: getReducer(formValuesOptions)\n  };\n\n  const listener = (\n    emitterInstance$: Emitter,\n    optionsObj: any,\n    helperFnsObj: any\n  ) => (newValue: { type: string; value: any | any[] }) =>\n    handler(\n      newValue,\n      Object.assign({}, optionsObj, helperFnsObj, {\n        emitter$: emitterInstance$\n      })\n    );\n\n  emitter$.on('form@value', listener(emitter$, formValuesOptions, helpers));\n  emitter$.on('form@reset', (payload: any) => {\n    const states = helpers.getStates(\n      not(payload instanceof Event) && isPlainObject(payload)\n        ? payload\n        : getInitialState(formValuesOptions)\n    );\n    emitter$.emit('form@values', deepClone(states.current));\n  });\n\n  emitter$.on('set-values', (payload: any) => {\n    isPlainObject(payload) || throwError(\"Invalid values' state object\");\n    const states = helpers.getStates(payload);\n    emitter$.emit('form@values', deepClone(states.current));\n  });\n\n  return listener;\n};\n\nfunction handler(newValue: { type: string; value: any | any[] }, ctx: any) {\n  const currentState = ctx.getStates().current;\n  promisifyFunction(ctx.hookListeners.before, {\n    currentState,\n    newValue\n  })\n    .then(() => {\n      return promisifyFunction(ctx.reducer, currentState, newValue);\n    })\n    .then((newComputedState: any) => {\n      isPlainObject(newComputedState) ||\n        throwError('Invalid state values data; expected plain object');\n      const states = ctx.getStates(newComputedState);\n      ctx.emitter$.emit('form@values', deepClone(states.current));\n      return promisifyFunction(ctx.hookListeners.after, {\n        currentState: states.current,\n        previousState: states.previous\n      });\n    })\n    .then(() => true)\n    .catch((error: Error) => {\n      throwError(error);\n    });\n}\n\nfunction getInitialState(options: any) {\n  return isPlainObject(options.state)\n    ? deepClone(options.state)\n    : throwError(\"Invalid initial values' state\");\n}\n\nfunction getReducer(options: any) {\n  return isFunctionOrPromise(options.reducer)\n    ? options.reducer\n    : throwError(\"Invalid values' state reducer\");\n}\n\nfunction getHookListeners(options: any) {\n  const hooksDeclarationObj = Object.assign(\n    {},\n    { before: Icombinator, after: Icombinator },\n    options.hooks || {}\n  );\n  return Object.keys(hooksDeclarationObj).reduce(\n    (listeners: any, hook: string) => {\n      const listener = isFunctionOrPromise(hooksDeclarationObj[hook])\n        ? hooksDeclarationObj[hook]\n        : Icombinator;\n      return Object.assign({}, listeners, { [hook]: listener });\n    },\n    {}\n  );\n}\n\nfunction getStatesGenerator(options?: any) {\n  let states: {\n    current: Readonly<{ [key: string]: Readonly<any> }>;\n    previous: Readonly<{ [key: string]: Readonly<any> } | null>;\n  } = {\n    current: getInitialState(options) as Readonly<any>,\n    previous: null\n  };\n\n  return (...args: any[]) => {\n    if (!args.length) {\n      return states;\n    }\n\n    if (isPlainObject(args[0])) {\n      states = {\n        current: deepClone(args[0]),\n        previous: states.current\n      };\n    }\n\n    return states;\n  };\n}\n","import stateStreamingFn from '@src/state/values';\nimport { Emitter } from 'mitt';\nexport default (\n  _: HTMLFormElement,\n  emitter$: Emitter,\n  formOptions: any\n): Emitter => {\n  stateStreamingFn(emitter$, formOptions.values);\n  return emitter$;\n};\n","import modelValidation from '@/model/validation';\nimport buildEmitter from '@emitter/builder';\nimport { throwError } from '@utils/errors';\nimport { deepClone, nonEmptyArray } from '@utils/object';\nimport EventEmitter, { Emitter } from 'mitt';\nconst RxForm = (options: any) => {\n  const { model, errors: err = null } = modelValidation(deepClone(options));\n  if (nonEmptyArray(err)) {\n    throwError((err as string[]).join('; '));\n  }\n\n  let emitter$: Emitter = buildEmitter(model);\n  let form$: Emitter = EventEmitter();\n\n  emitter$.on('form@values', (values: any) => {\n    form$.emit('form@values', values);\n  });\n\n  emitter$.on('form@errors', (errors: any) => {\n    form$.emit('form@errors', errors);\n  });\n\n  emitter$.on('form@status', (status: any) => {\n    form$.emit('form@status', status);\n  });\n\n  const destroy = () => {\n    if (form$) {\n      form$.emit('destroy');\n      setTimeout(() => {\n        // @ts-ignore\n        form$ = null;\n      }, 1000);\n    }\n\n    if (emitter$) {\n      emitter$.emit('form@remove-dom-listeners');\n      emitter$.emit('destroy');\n      setTimeout(() => {\n        // @ts-ignore\n        emitter$ = null;\n      }, 1000);\n    }\n  };\n\n  return { form$, destroy };\n};\n\nexport default RxForm;\n","import registerDOMEvents from '@emitter/dom-events';\nimport registerErrorProviders from '@emitter/error-providers';\nimport registerErrorsStateStreamingFn from '@emitter/errors-state';\nimport registerFormSubmissionHandler from '@emitter/onsubmit';\nimport registerStatusStateStreamingFn from '@emitter/status-state';\nimport registerValueProviders from '@emitter/value-providers';\nimport registerValueProvidersRouter from '@emitter/value-providers-router';\nimport registerValuesStateStreamingFn from '@emitter/values-state';\nimport { getFormElement } from '@utils/dom';\nimport EventEmitter, { Emitter } from 'mitt';\nexport default (formOptions: any) => {\n  const $formEl = getFormElement(formOptions.target);\n  const emitter$: Emitter = EventEmitter();\n  const registrationFns = [\n    registerDOMEvents,\n    registerValueProvidersRouter,\n    registerValueProviders,\n    registerValuesStateStreamingFn,\n    registerErrorProviders,\n    registerErrorsStateStreamingFn,\n    registerStatusStateStreamingFn,\n    registerFormSubmissionHandler\n  ];\n  registrationFns.forEach((fn: any) =>\n    fn($formEl as HTMLFormElement, emitter$, formOptions)\n  );\n  return emitter$;\n};\n"],"names":["DOMEvents","throwError","input","Error","JSON","stringify","toBool","x","Boolean","not","argsTag","funcTag","genTag","mapTag","setTag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","addMapEntry","map","pair","set","addSetEntry","value","add","arrayReduce","array","iteratee","accumulator","initAccum","index","length","isHostObject","result","toString","e","mapToArray","Array","size","forEach","key","overArg","func","transform","arg","setToArray","uid","arrayProto","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","call","replace","Buffer","undefined","Symbol","Uint8Array","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","clear","entry","ListCache","MapCache","Stack","__data__","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","isIndex","push","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","stack","isObject","isArr","constructor","initCloneArray","source","copyArray","tag","getTag","isFunc","buffer","slice","copy","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","symbol","initCloneByTag","stacked","get","props","keysFunc","symbolsFunc","values","offset","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","baseIsNative","isFunction","test","arrayBuffer","newValue","getMapData","type","data","getValue","this","has","pop","cache","pairs","LARGE_ARRAY_SIZE","other","ArrayBuffer","resolve","ctorString","isLength","baseKeys","isBoolean","isNil","isNull","isUndefined","isString","trim","str","direction","includes","trimLeft","trimRight","nonEmptyString","isNumber","isNaN","obj","isPlainObject","name","nonEmptyArray","isFunctionOrPromise","then","promisifyFunction","fn","_i","args","reject","inputs","nonPrimitiveType","Element","Event","deepClone","error","nonEmptyPlainObject","getValueFromObject","path","selectorPath","decomposedPath","split","fromObj","step","regex","standardizedKey","Number","join","deepFreeze","freeze","getOwnPropertyNames","prop","isFrozen","cloneDeep","isFormFieldElement","HTMLInputElement","isInputElement","HTMLSelectElement","isSelectElement","HTMLTextAreaElement","isTextAreaElement","domSelector","selector","from","queryString","provider","$sourceEl","$matchedElement","querySelector","document","getFormElement","target","assertFormElement","HTMLFormElement","isFormElement","$el","emitterDomEvents","emitter$","element","domEvents","domEvent","registerAs","_a","cleanup","event","listener","options","addEventListener","_","removeEventListener","addDOMListener","SUBMIT","preventDefault","emit","on","getFormFieldElementValue","$field","checked","parser","getInputFieldElementValue","multiple","$target","filter","option","selected","text","selectedIndex","singleValue","getSelectFieldElementValue","getTextAreaFieldElementValue","checkDOMTarget","model","errors","checkFormSubmissionHandler","onsubmit","checkValues","initialStateValidation","state","checkInitialState","providersValidation","providers","validation","reduce","providerConfig","idx","item","assign","dispatch","providerIdx","concat","checkProviders","reducerValidation","reducer","checkReducer","checkErrors","errorsConfig","message","validator","register","$formEl","FOCUS","INPUT","CHANGE","BLUR","RESET","I","a","K","formErrorOptionObj","hooks","emitterInstance$","optionsObj","helpers","errorMessage","getErrorMessageFn","formErrors","getErrorBagFn","formStatus","getStatusFn","hookListeners","start","Icombinator","end","noop","for","ok","getValidatorFn","validatorInput","getInputFn","validatorPredicate","getPredicateFn","formValues","ctx","validatorInput_1","submitting","predicateResult","validationResult","validationErrorMessage","payload","context","status","catch","handler","stateValues","pathSelector","predicate","Kcombinator","formEmitterInstance$","errorBag","fields","formOptions","errorProviderFn","formErrorsOptions","states","getStates","current","getInitialState","previous","getHookListeners","getReducer","helperFnsObj","currentState","before","newComputedState","after","previousState","hooksDeclarationObj","listeners","hook","stateStreamingFn","info","warning","log","update","getFormErrorsStateFn","getFormSubmissionHandler","getFormStatusStateFn","getFormValuesStateFn","evt","formDOMEvents","formDOMEventType","formEmitter$","HTMLButtonElement","fieldStatusObj_1","fieldDOMEvent","mapEventToFieldStatus","updatedFieldStatusObj","statusType","__","formValueOptions","standardizedFormValueOptions","standardizeFormValueOptions","parseAsArray","isValuesArray","getParser","transformer","getTransformer","$targetElements","$matchedElements","querySelectorAll","every","$e","parserFn","$elements","all","extractedValue","parseValues","extractedValues","transformerFn","transformValues","transformedValues","formValueOptionObj","valueProviderFn","router","$formElement","standardizeValueProviderOptionsObj","providerOptionObj","events","getProviderEventSources","simplifiedProvidersOptionObjs","matchedProviderIndex","findIndex","simplifiedProviderOptionObj","matches","matchedProvider","reset","allowedEvents","extractedEvents","eventsFilter","providedEvents","collectedEvents","formValuesOptions","_b","err","EventEmitter","registerDOMEvents","registerValueProvidersRouter","registerValueProviders","registerValuesStateStreamingFn","registerErrorProviders","registerErrorsStateStreamingFn","registerStatusStateStreamingFn","registerFormSubmissionHandler","buildEmitter","form$","destroy","setTimeout"],"mappings":"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"}